plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "8.4.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('com.fasterxml.jackson.core:jackson-databind:2.13.2.1') {
		version {
			strictly '2.13.2.1'
		}
	}
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'com.fasterxml.jackson:jackson-bom:2.13.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.squareup.okhttp3:okhttp:4.0.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.6.9'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.postgresql:postgresql:42.4.1'
	implementation 'com.jcabi:jcabi-manifests:1.1'
	implementation 'org.flywaydb:flyway-core'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: "junit", module: "junit"
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	testImplementation("org.junit.jupiter:junit-jupiter-params:5.4.2")
	testImplementation("com.squareup.okhttp3:mockwebserver:4.0.0")
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation("com.h2database:h2")
	testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

	components {
		withModule('org.springframework:spring-beans') {
			allVariants {
				withDependencyConstraints {
					// Need to patch constraints because snakeyaml is an optional dependency
					it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.31' } }
				}
			}
		}
	}


	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation("com.squareup.okhttp3:mockwebserver:4.10.0")
	testImplementation 'org.springframework.security:spring-security-test'


	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'
	testImplementation("com.h2database:h2")

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.6.9'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.postgresql:postgresql:42.5.0'


	flyway {
		url = 'jdbc:postgresql://localhost:5432/bankaccount'
		user = 'bankaccount'
		password = 'bankaccount'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
